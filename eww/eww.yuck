(defwidget bar []
  (centerbox :orientation "h"
    (left)
    (workspaces)
    (right)))

(defwidget left []
  (box :class "left"
       :orientation "h"
       :space-evenly false
       :halign "start"
    (icontext :label "${time_poll}" :icon "")))

(defwidget workspaces []
    (box :class "workspaces"
         :orientation "h"
         :halign "start"
         :spacing 10
      (box :space-evenly false
        (for tag in '${wmstate.workspaces[0].tags}'
          (button
            :class {tag.mine ? "wsb wsb-mine" :
                    tag.visible ? "wsb wsb-visible" :
                    tag.urgent ? "wsb wsb-urgent" :
                    tag.busy ? "wsb wsb-busy" : "wsb"}
            :onclick "leftwm-command \"SendWorkspaceToTag 0 ${tag.index}\""
            {tag.name})))))

(defwidget right []
  (box :class "right" :orientation "h" :space-evenly false :halign "end"
    ; (music)
    ; (metric :label ""
    ;         :value '${EWW_RAM.used_mem_perc}'
    ;         :onchange "")
    ; (metric :label ""
    ;         :value {round((1 - (EWW_DISK["/"].free / EWW_DISK["/"].total)) * 100, 0)}
    ;         :onchange "")
    (icontext :label "${updates_poll}" :icon "")
    (icontext :label "${round(EWW_CPU.avg, 0)}%" :icon "﬙")
    (icontext :label "${round(EWW_RAM.used_mem_perc, 0)}%" :icon "")
    (icontext :label "${volume_poll}%" :icon "墳")
    (icontext :label "${date_poll}" :icon "")))

(defwidget music []
  (box :class "music"
       :orientation "h"
       :space-evenly false
       :halign "center"
    "${music}"))

(defwidget metric [label value onchange]
  (box :orientation "h"
       :class "metric"
       :space-evenly false
    (box :class "label" label)
    (scale :min 0
           :max 101
           :active {onchange != ""}
           :value value
           :onchange onchange)))

(defwidget icontext [icon label]
  (box :orientation "h"
       :class "icontext"
       :space-evenly false
       :spacing 10
    (box :class "icon" icon)
    (box :class "label" label)))

(deflisten music :initial ""
  "playerctl --follow metadata --format '{{ artist }} - {{ title }}' || true")

(defpoll volume_poll :interval "1s"
  "pamixer --get-volume")

(defpoll time_poll :interval "1s"
  "date '+%H:%M:%S'")

(defpoll date_poll :interval "1m"
  "date '+%d.%m.%Y'")

(defpoll updates_poll :initial "0" :interval "1m"
  "checkupdates 2> /dev/null | wc -l")

(deflisten wmstate
  :initial '{"workspaces":[{"layout":"","tags":[{"name":"","index":0,"mine":false,"busy":false,"visible":false,"urgent":false}]}]}'
  "leftwm state")

(defwindow bar0
  :monitor 0
  :windowtype "dock"
  :geometry (geometry :x "0%"
                      :y "0%"
                      :width "100%"
                      :height "18px"
                      :anchor "top center")
  :reserve (struts :side "top" :distance "30px")
  (bar))
